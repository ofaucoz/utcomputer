var annotated_dup =
[
    [ "AdditionOperator", "classAdditionOperator.html", "classAdditionOperator" ],
    [ "AtomLiteral", "structAtomLiteral.html", "structAtomLiteral" ],
    [ "AtomLiteralDefinition", "classAtomLiteralDefinition.html", "classAtomLiteralDefinition" ],
    [ "CommaLiteral", "structCommaLiteral.html", "structCommaLiteral" ],
    [ "CommaLiteralDefinition", "classCommaLiteralDefinition.html", "classCommaLiteralDefinition" ],
    [ "DenominatorOperator", "classDenominatorOperator.html", "classDenominatorOperator" ],
    [ "DivisionOperator", "classDivisionOperator.html", "classDivisionOperator" ],
    [ "Dumper", "classDumper.html", "classDumper" ],
    [ "EuclidianDivisionOperator", "classEuclidianDivisionOperator.html", "classEuclidianDivisionOperator" ],
    [ "EvalOperator", "classEvalOperator.html", "classEvalOperator" ],
    [ "ExpressionLiteral", "structExpressionLiteral.html", "structExpressionLiteral" ],
    [ "ExpressionLiteralDefinition", "classExpressionLiteralDefinition.html", "classExpressionLiteralDefinition" ],
    [ "Fraction", "classFraction.html", "classFraction" ],
    [ "historyTreeView", "classhistoryTreeView.html", "classhistoryTreeView" ],
    [ "InvalidOperandException", "structInvalidOperandException.html", "structInvalidOperandException" ],
    [ "InvalidSyntaxException", "structInvalidSyntaxException.html", "structInvalidSyntaxException" ],
    [ "keyboardWidget", "classkeyboardWidget.html", "classkeyboardWidget" ],
    [ "Lexer", "classLexer.html", "classLexer" ],
    [ "LiteralDefinitionInterface", "classLiteralDefinitionInterface.html", "classLiteralDefinitionInterface" ],
    [ "LiteralInterface", "structLiteralInterface.html", "structLiteralInterface" ],
    [ "LogicAndOperator", "classLogicAndOperator.html", "classLogicAndOperator" ],
    [ "LogicDifferentOperator", "classLogicDifferentOperator.html", "classLogicDifferentOperator" ],
    [ "LogicEqualsOperator", "classLogicEqualsOperator.html", "classLogicEqualsOperator" ],
    [ "LogicGreaterEqualsOperator", "classLogicGreaterEqualsOperator.html", "classLogicGreaterEqualsOperator" ],
    [ "LogicGreaterOperator", "classLogicGreaterOperator.html", "classLogicGreaterOperator" ],
    [ "LogicLesserEqualsOperator", "classLogicLesserEqualsOperator.html", "classLogicLesserEqualsOperator" ],
    [ "LogicLesserOperator", "classLogicLesserOperator.html", "classLogicLesserOperator" ],
    [ "LogicNotOperator", "classLogicNotOperator.html", "classLogicNotOperator" ],
    [ "LogicOrOperator", "classLogicOrOperator.html", "classLogicOrOperator" ],
    [ "MainWindow", "classMainWindow.html", "classMainWindow" ],
    [ "Math", "classMath.html", "classMath" ],
    [ "messageTreeView", "classmessageTreeView.html", "classmessageTreeView" ],
    [ "ModuloOperator", "classModuloOperator.html", "classModuloOperator" ],
    [ "MultiplicationOperator", "classMultiplicationOperator.html", "classMultiplicationOperator" ],
    [ "NumeratorOperator", "classNumeratorOperator.html", "classNumeratorOperator" ],
    [ "NumericComplexBuildOperator", "classNumericComplexBuildOperator.html", "classNumericComplexBuildOperator" ],
    [ "NumericComplexImaginary", "classNumericComplexImaginary.html", "classNumericComplexImaginary" ],
    [ "NumericComplexReal", "classNumericComplexReal.html", "classNumericComplexReal" ],
    [ "NumericLiteral", "structNumericLiteral.html", "structNumericLiteral" ],
    [ "NumericLiteralDefinition", "classNumericLiteralDefinition.html", "classNumericLiteralDefinition" ],
    [ "ObservableMap", "classObservableMap.html", "classObservableMap" ],
    [ "ObservableStack", "classObservableStack.html", "classObservableStack" ],
    [ "OperatorInterface", "classOperatorInterface.html", "classOperatorInterface" ],
    [ "OperatorLiteral", "structOperatorLiteral.html", "structOperatorLiteral" ],
    [ "OperatorLiteralDefinition", "classOperatorLiteralDefinition.html", "classOperatorLiteralDefinition" ],
    [ "OppositeOperator", "classOppositeOperator.html", "classOppositeOperator" ],
    [ "ParenthesisLiteral", "structParenthesisLiteral.html", "structParenthesisLiteral" ],
    [ "ParenthesisLiteralDefinition", "classParenthesisLiteralDefinition.html", "classParenthesisLiteralDefinition" ],
    [ "ProgramLiteral", "structProgramLiteral.html", "structProgramLiteral" ],
    [ "ProgramLiteralDefinition", "classProgramLiteralDefinition.html", "classProgramLiteralDefinition" ],
    [ "Repository", "classRepository.html", "classRepository" ],
    [ "RepositoryObserver", "classRepositoryObserver.html", "classRepositoryObserver" ],
    [ "repositoryWidget", "classrepositoryWidget.html", "classrepositoryWidget" ],
    [ "Resolver", "classResolver.html", "classResolver" ],
    [ "Runner", "classRunner.html", "classRunner" ],
    [ "StackClearOperator", "classStackClearOperator.html", "classStackClearOperator" ],
    [ "StackDropOperator", "classStackDropOperator.html", "classStackDropOperator" ],
    [ "SubstractionOperator", "classSubstractionOperator.html", "classSubstractionOperator" ],
    [ "UndefinedAtomException", "structUndefinedAtomException.html", "structUndefinedAtomException" ],
    [ "UnsupportedLiteralException", "structUnsupportedLiteralException.html", "structUnsupportedLiteralException" ],
    [ "UTComputer", "classUTComputer.html", "classUTComputer" ],
    [ "WhitespaceLiteral", "structWhitespaceLiteral.html", "structWhitespaceLiteral" ],
    [ "WhitespaceLiteralDefinition", "classWhitespaceLiteralDefinition.html", "classWhitespaceLiteralDefinition" ]
];