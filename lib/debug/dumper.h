#ifndef LO21_DEBUG_TOKEN_DUMPER_H
#define LO21_DEBUG_TOKEN_DUMPER_H


#include <iostream>
#include <vector>
#include "../literal/interface.h"

using namespace std;

/*
 * The dumper is a tool for debugging able to dump a list of literals generated by the
 * Lexer in a nice, useful display.
 */
class Dumper {
public:
    static string literalsToCommand(LiteralVector literals) {
        string result = "";

        for (LiteralVector::iterator it = literals.begin(); it != literals.end(); ++it) {
            result += (*it)->toString() + " ";
        }

        return result.substr(0, result.size() - 1);
    }

    static void dumpLiterals(ostream& stream, LiteralVector literals) {
        int i = 0;

        for (LiteralVector::iterator it = literals.begin(); it != literals.end(); ++it) {
            stream << i << " : " << (*it)->toString() << endl;
            i++;
        }

        stream << endl;
    }
};


#endif //LO21_DEBUG_TOKEN_DUMPER_H
